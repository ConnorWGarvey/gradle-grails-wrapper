buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath(
      'org.apache.commons:commons-lang3:3.1',
      'org.apache.commons:commons-vfs2:2.0',
    )
  }
}

import org.apache.commons.lang3.SystemUtils
import org.apache.commons.vfs2.FileObject
import org.apache.commons.vfs2.FileSystemManager
import org.apache.commons.vfs2.Selectors
import org.apache.commons.vfs2.VFS

apply plugin: 'eclipse'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven'

group = 'com.connorgarvey.gradle'
version = '0.1-SNAPSHOT'

repositories { 
  mavenCentral()
}

dependencies {
  groovy localGroovy()
  compile gradleApi()
  compile(
    'commons-io:commons-io:1.3.2',
    'org.apache.commons:commons-compress:1.3',
    'org.apache.commons:commons-lang3:3.1',
    'org.apache.commons:commons-vfs2:2.0',
  )
  testCompile(
    'org.spockframework:spock-core:0.6-groovy-1.8',
    'org.gmock:gmock:0.8.2',
  )
}

task publish(dependsOn:[build]) << {
  def sep = File.separator
  File checkoutFolder = new File(project.buildDir.canonicalPath + sep + 'artifactPublish')
  File checkoutProjectFolder = new File(checkoutFolder.canonicalPath + sep + 'gradle-grails-wrapper')
  File checkoutWebFolder = new File(checkoutProjectFolder.canonicalPath + sep + 'web')
  assert checkoutFolder.deleteDir()
  checkoutFolder.mkdirs()
  def commandList = ['git', 'clone', 'git@github.com:ConnorWGarvey/gradle-grails-wrapper.git', '-b',
      'gh-pages']
  logger.info(commandList.join(' '))
  def process = commandList.execute([], checkoutFolder)
  process.waitFor()
  assert process.exitValue() == 0
  assert checkoutWebFolder.deleteDir()
  checkoutWebFolder.mkdirs()
  copy {
    from new File(project.buildDir.path + sep + 'libs')
    into checkoutWebFolder
  }
  def command = 'git add .'
  logger.info(command)
  process = command.execute([], checkoutProjectFolder)
  process.waitFor()
  assert process.exitValue() == 0
  commandList = ['git', 'commit', '-m', "Released version ${project.version}"]
  logger.info(commandList.join(' '))
  process = commandList.execute([], checkoutProjectFolder)
  process.waitFor()
  assert process.exitValue() == 0
  command = 'git push'
  logger.info(command)
  //process = command.execute([], checkoutProjectFolder)
  //process.waitFor()
  //assert process.exitValue() == 0
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.0-milestone-9'
}
