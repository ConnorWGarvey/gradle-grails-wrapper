buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath(
      'org.apache.commons:commons-lang3:3.1',
      'org.apache.commons:commons-vfs2:2.0',
    )
  }
}

import org.apache.commons.lang3.SystemUtils
import org.apache.commons.vfs2.FileObject
import org.apache.commons.vfs2.FileSystemManager
import org.apache.commons.vfs2.Selectors
import org.apache.commons.vfs2.VFS

apply plugin: 'eclipse'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven'

group = 'com.connorgarvey.gradle'
version = '0.1'

repositories { 
  mavenCentral()
}

dependencies {
  groovy localGroovy()
  compile gradleApi()
  compile(
    'commons-io:commons-io:1.3.2',
    'org.apache.commons:commons-compress:1.3',
    'org.apache.commons:commons-lang3:3.1',
    'org.apache.commons:commons-vfs2:2.0',
  )
  testCompile(
    'org.spockframework:spock-core:0.6-groovy-1.8',
    'org.gmock:gmock:0.8.2',
  )
}

task writePom << {
  pom {
    project {
      inceptionYear '2012'
      licenses {
        license {
          name 'The Apache Software License, Version 2.0'
          url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          distribution 'repo'
        }
      }
    }
  }.writeTo("${buildDir}/libs/${project.name}-${project.version}.pom")
}

task publish(dependsOn:[build, writePom]) << {
  def sep = File.separator
  File checkoutFolder = new File(project.buildDir.canonicalPath + sep + 'artifactPublish')
  File checkoutProjectFolder = new File(checkoutFolder.canonicalPath + sep + 'gradle-grails-wrapper')
  File checkoutRepositoryFolder = new File(checkoutProjectFolder.canonicalPath + sep + 'repo')
  File checkoutPublishFolder = new File(checkoutRepositoryFolder.path + sep +
      project.group.split('\\.').join(sep) + sep + project.name + sep + project.version)
  assert checkoutFolder.deleteDir()
  checkoutFolder.mkdirs()
  exec {
    commandLine('git', 'clone', 'git@github.com:ConnorWGarvey/gradle-grails-wrapper.git', '-b',
        'gh-pages')
    workingDir checkoutFolder
  }
  assert checkoutRepositoryFolder.deleteDir()
  checkoutPublishFolder.mkdirs()
  copy {
    from new File(project.buildDir.path + sep + 'libs')
    into checkoutPublishFolder
  }
  exec {
    commandLine 'git', 'add', '.'
    workingDir checkoutProjectFolder
  }
  exec {
    commandLine 'git', 'commit', '-m', "Released version ${project.version}"
    workingDir checkoutProjectFolder
  }
  exec {
    commandLine 'git', 'push'
    workingDir checkoutProjectFolder
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.0-milestone-9'
}
